---
title: "Analyzing Forest Fire Data"
author: "Minjae Lee"
date: '2020 8 3 '
output: html_document
---
library(tidyverse)
Import the data file. Save it as a data frame. 

```{r}
forest_fires = read_csv("forestfires.csv")
```
```{r}
head(forest_fires)
```


Create a bar chart showing the number of forest fires occuring during each month
```{r}
fires_by_month = forest_fires %>%
  group_by(month) %>%
  summarize(total_fires = n())
ggplot(data = fires_by_month) +
  aes(x = month, y = total_fires) +
  geom_bar(stat = "identity")  +
  theme(panel.background = element_rect(fill = "white"), 
        axis.line = element_line(size = 0.25, 
                                 colour = "black"))
```



Create a bar chart showing the number of forest fires occurring on each day of the week
```{r}
fires_by_DOW = forest_fires %>%
  group_by(day) %>%
  summarize(total_fires = n())
ggplot(data = fires_by_DOW) +
  aes(x = day, y = total_fires) +
  geom_bar(stat = "identity") +
  theme(panel.background = element_rect(fill = "white"), 
        axis.line = element_line(size = 0.25, 
                                 colour = "black")) 
```

Change the data type of month to factor and specify the order of months
```{r}
forest_fires = forest_fires %>%
  mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")), 
         day = factor(day, levels = c("sun", "mon", "tue", "wed", "thu", "fri", "sat")))
## once have reordered the months and days of the week, you can re-run the bar chart code above
# to create new bar graphs

```



```









